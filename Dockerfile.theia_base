# How to use this image
# 
# The following instructions assume that you do not have Docker or Node
# installed on your computer. Instead, you will use the online Docker
# playground website 'Play With Docker (PWD)' to run the Theia browser example
# by just using PWD through your browser.
# 
# 1. First, open up http://labs.play-with-docker.com/ in your browser and
#    create a Play With Docker session and add a new instance to your Docker
#    playground.
# 
# 2. Next, you will need to download this Dockerfile into your PWD session with
#    wget.
# 
# $ wget https://raw.githubusercontent.com/theia-ide/theia/master/examples/browser/Dockerfile
# 
# 3. Next, ask Docker to build the image. This will take some time.
# 
# $ docker build -t theia .
# 
# 4. Now use Docker to run the image you just built.
# 
# $ docker run -d -p 0.0.0.0:3000:3000 theia
# 
# 5. There should now be a 3000 link at the top of your PWD window. Click on it
#    to try out the Theia browser example!
#    
#    Note that you may get an "Error forwarding request." error after clicking
#    on the 3000 link. Please wait a few seconds before trying again as Theia
#    may not have completely finished starting up yet.
#
# Note: If you want Java language support you will need to extend this image yourself
# by adding a JDK to the image and making sure it is accessible via the system PATH.

FROM node:8-alpine
RUN adduser -S theia
WORKDIR /home/theia
RUN rm -rf /opt/yarn && rm -f /usr/local/bin/yarn && rm -f /usr/local/bin/yarnpkg
RUN apk update && apk add npm git python make g++ yarn
USER theia
RUN git clone --depth 1 https://github.com/theia-ide/theia && \
    cd theia && \
    yarn install
WORKDIR /home/theia/theia/examples/browser
ENV SHELL /bin/bash

#########################################
############### Akamai ##################
#########################################

ENV AKAMAI_CLI_HOME=/cli GOROOT=/usr/lib/go GOPATH=/go
ENV PATH=/go/bin:$PATH
RUN mkdir -p /go/bin
RUN echo "http://dl-cdn.alpinelinux.org/alpine/v3.4/community" >> /etc/apk/repositories
RUN echo "http://dl-cdn.alpinelinux.org/alpine/v3.4/main" >> /etc/apk/repositories
RUN mkdir -p /cli/.akamai-cli && mkdir /pipeline
RUN wget -q `curl -s https://api.github.com/repos/akamai/cli/releases/latest | jq .assets[].browser_download_url | grep linuxamd64 | grep -v sig | sed s/\"//g`
RUN mv akamai-*-linuxamd64 /usr/local/bin/akamai && chmod +x /usr/local/bin/akamai
RUN curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
RUN go get github.com/akamai/cli && \
    cd $GOPATH/src/github.com/akamai/cli && \
    dep ensure && go build -o /usr/local/bin/akamai && \
    chmod +x /usr/local/bin/akamai
RUN pip install --upgrade pip
RUN akamai install property
RUN akamai install --force property-manager
RUN echo 'eval "$(/usr/local/bin/akamai --bash)"' >> /root/.bashrc
RUN echo "[cli]" > /cli/.akamai-cli/config && \
    echo "cache-path            = /cli/.akamai-cli/cache" >> /cli/.akamai-cli/config && \
    echo "config-version        = 1" >> /cli/.akamai-cli/config && \
    echo "enable-cli-statistics = true" >> /cli/.akamai-cli/config && \
    echo "last-ping             = 2018-08-08T00:00:12Z" >> /cli/.akamai-cli/config && \
    echo "client-id             = world-tour" >> /cli/.akamai-cli/config && \
    echo "install-in-path       =" >> /cli/.akamai-cli/config && \
    echo "last-upgrade-check    = ignore" >> /cli/.akamai-cli/config
RUN echo '         ___    __                         _    ' >  /root/.motd && \
    echo '        /   |  / /______ _____ ___  ____ _(_)   ' >> /root/.motd && \
    echo '       / /| | / //_/ __ `/ __ `__ \/ __ `/ /    ' >> /root/.motd && \
    echo '      / ___ |/ ,< / /_/ / / / / / / /_/ / /     ' >> /root/.motd && \
    echo '     /_/  |_/_/|_|\__,_/_/ /_/ /_/\__,_/_/      ' >> /root/.motd && \
    echo '================================================' >> /root/.motd && \
    echo '=  Welcome to the Akamai Developer World Tour  =' >> /root/.motd && \
    echo '================================================' >> /root/.motd && \
    echo '=  Warning: This environment is ephemeral,     =' >> /root/.motd && \
    echo '=           and may disappear.                 =' >> /root/.motd && \
    echo '================================================' >> /root/.motd
RUN echo "cat /root/.motd" >> /root/.bashrc
RUN echo "PS1='Akamai Developer [\w]$ '" >> /root/.bashrc
RUN pip install httpie-edgegrid
RUN mkdir /root/.httpie
RUN echo '{' >> /root/.httpie/config.json && \
    echo '"__meta__": {' >> /root/.httpie/config.json && \
    echo '    "about": "HTTPie configuration file", ' >> /root/.httpie/config.json && \
    echo '    "httpie": "1.0.0-dev"' >> /root/.httpie/config.json && \
    echo '}, ' >> /root/.httpie/config.json && \
    echo '"default_options": ["--timeout=300","--style=autumn"], ' >> /root/.httpie/config.json && \
    echo '"implicit_content_type": "json"' >> /root/.httpie/config.json && \
    echo '}' >> /root/.httpie/config.json

VOLUME /root
VOLUME /pipeline
WORKDIR /root
ADD ./examples /root/examples

EXPOSE 3000

CMD yarn run start --hostname 0.0.0.0
